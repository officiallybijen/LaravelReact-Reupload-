{"ast":null,"code":"import { useEffect } from \"react\";\nimport Home from \"../../components/home\";\nimport useFetch from \"../../useFetch\";\nimport * as actionTypes from \"./shopping-types\";\nconst pro = [];\nconst INITIAL_STATE = {\n  products: [],\n  cart: [],\n  currentItem: null\n};\n\nconst shopReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SUCCESS:\n      return { ...state,\n        smurfs: action.payload,\n        loading: false,\n        err: ''\n      };\n\n    case actionTypes.ADD_TO_CART:\n      //get the items data the products array\n      const item = state.products.find(prod => prod.id === action.payload.id); //check if the item is in cart already\n\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }]\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    case actionTypes.EMPTY_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id === -1)\n      };\n\n    case actionTypes.ADJUST_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: +action.payload.qty\n        } : item)\n      };\n\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return { ...state,\n        currentItem: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"names":["useEffect","Home","useFetch","actionTypes","pro","INITIAL_STATE","products","cart","currentItem","shopReducer","state","action","type","SUCCESS","smurfs","payload","loading","err","ADD_TO_CART","item","find","prod","id","inCart","map","qty","REMOVE_FROM_CART","filter","EMPTY_CART","ADJUST_QTY","LOAD_CURRENT_ITEM"],"sources":["/home/bijen/Desktop/LaravelReact/react-frontend/src/redux/shopping/shopping-reducer.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport Home from \"../../components/home\";\nimport useFetch from \"../../useFetch\";\nimport * as actionTypes from \"./shopping-types\";\nconst pro=[];\nconst INITIAL_STATE = {\n  products: [],\n  cart: [],\n  currentItem: null,\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SUCCESS:\n      return {\n        ...state,\n        smurfs: action.payload,\n        loading: false,\n        err: ''\n      }\n    case actionTypes.ADD_TO_CART:\n      //get the items data the products array\n      const item=state.products.find(prod=>prod.id===action.payload.id)\n      //check if the item is in cart already\n      const inCart=state.cart.find(item=>item.id===action.payload.id?true:false);\n      return {\n        ...state,\n        cart:inCart?state.cart.map(item=>item.id===action.payload.id?{...item,qty:item.qty+1}:item):[...state.cart,{...item,qty:1}]\n      };\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cart:state.cart.filter(item=>item.id!==action.payload.id)\n      };\n      case actionTypes.EMPTY_CART:\n      return {\n        ...state,\n        cart:state.cart.filter(item=>item.id===-1)\n      };\n    case actionTypes.ADJUST_QTY:\n      return {\n        ...state,\n        cart:state.cart.map(item=>item.id===action.payload.id?{...item,qty:+action.payload.qty}:item)\n      };\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return {\n        ...state,\n        currentItem:action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,MAAMC,GAAG,GAAC,EAAV;AACA,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,EADU;EAEpBC,IAAI,EAAE,EAFc;EAGpBC,WAAW,EAAE;AAHO,CAAtB;;AAMA,MAAMC,WAAW,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BL,aAA0B;EAAA,IAAXM,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKT,WAAW,CAACU,OAAjB;MACE,OAAO,EACL,GAAGH,KADE;QAELI,MAAM,EAAEH,MAAM,CAACI,OAFV;QAGLC,OAAO,EAAE,KAHJ;QAILC,GAAG,EAAE;MAJA,CAAP;;IAMF,KAAKd,WAAW,CAACe,WAAjB;MACE;MACA,MAAMC,IAAI,GAACT,KAAK,CAACJ,QAAN,CAAec,IAAf,CAAoBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUX,MAAM,CAACI,OAAP,CAAeO,EAAnD,CAAX,CAFF,CAGE;;MACA,MAAMC,MAAM,GAACb,KAAK,CAACH,IAAN,CAAWa,IAAX,CAAgBD,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAUX,MAAM,CAACI,OAAP,CAAeO,EAAzB,GAA4B,IAA5B,GAAiC,KAAvD,CAAb;MACA,OAAO,EACL,GAAGZ,KADE;QAELH,IAAI,EAACgB,MAAM,GAACb,KAAK,CAACH,IAAN,CAAWiB,GAAX,CAAeL,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAUX,MAAM,CAACI,OAAP,CAAeO,EAAzB,GAA4B,EAAC,GAAGH,IAAJ;UAASM,GAAG,EAACN,IAAI,CAACM,GAAL,GAAS;QAAtB,CAA5B,GAAqDN,IAA1E,CAAD,GAAiF,CAAC,GAAGT,KAAK,CAACH,IAAV,EAAe,EAAC,GAAGY,IAAJ;UAASM,GAAG,EAAC;QAAb,CAAf;MAFvF,CAAP;;IAIF,KAAKtB,WAAW,CAACuB,gBAAjB;MACE,OAAO,EACL,GAAGhB,KADE;QAELH,IAAI,EAACG,KAAK,CAACH,IAAN,CAAWoB,MAAX,CAAkBR,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAUX,MAAM,CAACI,OAAP,CAAeO,EAAjD;MAFA,CAAP;;IAIA,KAAKnB,WAAW,CAACyB,UAAjB;MACA,OAAO,EACL,GAAGlB,KADE;QAELH,IAAI,EAACG,KAAK,CAACH,IAAN,CAAWoB,MAAX,CAAkBR,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAU,CAAC,CAAnC;MAFA,CAAP;;IAIF,KAAKnB,WAAW,CAAC0B,UAAjB;MACE,OAAO,EACL,GAAGnB,KADE;QAELH,IAAI,EAACG,KAAK,CAACH,IAAN,CAAWiB,GAAX,CAAeL,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAUX,MAAM,CAACI,OAAP,CAAeO,EAAzB,GAA4B,EAAC,GAAGH,IAAJ;UAASM,GAAG,EAAC,CAACd,MAAM,CAACI,OAAP,CAAeU;QAA7B,CAA5B,GAA8DN,IAAnF;MAFA,CAAP;;IAIF,KAAKhB,WAAW,CAAC2B,iBAAjB;MACE,OAAO,EACL,GAAGpB,KADE;QAELF,WAAW,EAACG,MAAM,CAACI;MAFd,CAAP;;IAIF;MACE,OAAOL,KAAP;EAtCJ;AAwCD,CAzCD;;AA2CA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}