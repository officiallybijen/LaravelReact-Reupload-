{"ast":null,"code":"if (global.GENTLY) require = GENTLY.hijack(require);\n\nvar crypto = require('crypto');\n\nvar fs = require('fs');\n\nvar util = require('util'),\n    path = require('path'),\n    File = require('./file'),\n    MultipartParser = require('./multipart_parser').MultipartParser,\n    QuerystringParser = require('./querystring_parser').QuerystringParser,\n    OctetParser = require('./octet_parser').OctetParser,\n    JSONParser = require('./json_parser').JSONParser,\n    StringDecoder = require('string_decoder').StringDecoder,\n    EventEmitter = require('events').EventEmitter,\n    Stream = require('stream').Stream,\n    os = require('os');\n\nfunction IncomingForm(opts) {\n  if (!(this instanceof IncomingForm)) return new IncomingForm(opts);\n  EventEmitter.call(this);\n  opts = opts || {};\n  this.error = null;\n  this.ended = false;\n  this.maxFields = opts.maxFields || 1000;\n  this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024;\n  this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024;\n  this.keepExtensions = opts.keepExtensions || false;\n  this.uploadDir = opts.uploadDir || os.tmpdir && os.tmpdir() || os.tmpDir();\n  this.encoding = opts.encoding || 'utf-8';\n  this.headers = null;\n  this.type = null;\n  this.hash = opts.hash || false;\n  this.multiples = opts.multiples || false;\n  this.bytesReceived = null;\n  this.bytesExpected = null;\n  this._parser = null;\n  this._flushing = 0;\n  this._fieldsSize = 0;\n  this._fileSize = 0;\n  this.openedFiles = [];\n  return this;\n}\n\nutil.inherits(IncomingForm, EventEmitter);\nexports.IncomingForm = IncomingForm;\n\nIncomingForm.prototype.parse = function (req, cb) {\n  this.pause = function () {\n    try {\n      req.pause();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  this.resume = function () {\n    try {\n      req.resume();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n\n      return false;\n    }\n\n    return true;\n  }; // Setup callback first, so we don't miss anything from data events emitted\n  // immediately.\n\n\n  if (cb) {\n    var fields = {},\n        files = {};\n    this.on('field', function (name, value) {\n      fields[name] = value;\n    }).on('file', function (name, file) {\n      if (this.multiples) {\n        if (files[name]) {\n          if (!Array.isArray(files[name])) {\n            files[name] = [files[name]];\n          }\n\n          files[name].push(file);\n        } else {\n          files[name] = file;\n        }\n      } else {\n        files[name] = file;\n      }\n    }).on('error', function (err) {\n      cb(err, fields, files);\n    }).on('end', function () {\n      cb(null, fields, files);\n    });\n  } // Parse headers and setup the parser, ready to start listening for data.\n\n\n  this.writeHeaders(req.headers); // Start listening for data.\n\n  var self = this;\n  req.on('error', function (err) {\n    self._error(err);\n  }).on('aborted', function () {\n    self.emit('aborted');\n\n    self._error(new Error('Request aborted'));\n  }).on('data', function (buffer) {\n    self.write(buffer);\n  }).on('end', function () {\n    if (self.error) {\n      return;\n    }\n\n    var err = self._parser.end();\n\n    if (err) {\n      self._error(err);\n    }\n  });\n  return this;\n};\n\nIncomingForm.prototype.writeHeaders = function (headers) {\n  this.headers = headers;\n\n  this._parseContentLength();\n\n  this._parseContentType();\n};\n\nIncomingForm.prototype.write = function (buffer) {\n  if (this.error) {\n    return;\n  }\n\n  if (!this._parser) {\n    this._error(new Error('uninitialized parser'));\n\n    return;\n  }\n\n  if (typeof this._parser.write !== 'function') {\n    this._error(new Error('did not expect data'));\n\n    return;\n  }\n\n  this.bytesReceived += buffer.length;\n  this.emit('progress', this.bytesReceived, this.bytesExpected);\n\n  var bytesParsed = this._parser.write(buffer);\n\n  if (bytesParsed !== buffer.length) {\n    this._error(new Error('parser error, ' + bytesParsed + ' of ' + buffer.length + ' bytes parsed'));\n  }\n\n  return bytesParsed;\n};\n\nIncomingForm.prototype.pause = function () {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.resume = function () {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.onPart = function (part) {\n  // this method can be overwritten by the user\n  this.handlePart(part);\n};\n\nIncomingForm.prototype.handlePart = function (part) {\n  var self = this; // This MUST check exactly for undefined. You can not change it to !part.filename.\n\n  if (part.filename === undefined) {\n    var value = '',\n        decoder = new StringDecoder(this.encoding);\n    part.on('data', function (buffer) {\n      self._fieldsSize += buffer.length;\n\n      if (self._fieldsSize > self.maxFieldsSize) {\n        self._error(new Error('maxFieldsSize exceeded, received ' + self._fieldsSize + ' bytes of field data'));\n\n        return;\n      }\n\n      value += decoder.write(buffer);\n    });\n    part.on('end', function () {\n      self.emit('field', part.name, value);\n    });\n    return;\n  }\n\n  this._flushing++;\n  var file = new File({\n    path: this._uploadPath(part.filename),\n    name: part.filename,\n    type: part.mime,\n    hash: self.hash\n  });\n  this.emit('fileBegin', part.name, file);\n  file.open();\n  this.openedFiles.push(file);\n  part.on('data', function (buffer) {\n    self._fileSize += buffer.length;\n\n    if (self._fileSize > self.maxFileSize) {\n      self._error(new Error('maxFileSize exceeded, received ' + self._fileSize + ' bytes of file data'));\n\n      return;\n    }\n\n    if (buffer.length == 0) {\n      return;\n    }\n\n    self.pause();\n    file.write(buffer, function () {\n      self.resume();\n    });\n  });\n  part.on('end', function () {\n    file.end(function () {\n      self._flushing--;\n      self.emit('file', part.name, file);\n\n      self._maybeEnd();\n    });\n  });\n};\n\nfunction dummyParser(self) {\n  return {\n    end: function () {\n      self.ended = true;\n\n      self._maybeEnd();\n\n      return null;\n    }\n  };\n}\n\nIncomingForm.prototype._parseContentType = function () {\n  if (this.bytesExpected === 0) {\n    this._parser = dummyParser(this);\n    return;\n  }\n\n  if (!this.headers['content-type']) {\n    this._error(new Error('bad content-type header, no content-type'));\n\n    return;\n  }\n\n  if (this.headers['content-type'].match(/octet-stream/i)) {\n    this._initOctetStream();\n\n    return;\n  }\n\n  if (this.headers['content-type'].match(/urlencoded/i)) {\n    this._initUrlencoded();\n\n    return;\n  }\n\n  if (this.headers['content-type'].match(/multipart/i)) {\n    var m = this.headers['content-type'].match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n    if (m) {\n      this._initMultipart(m[1] || m[2]);\n    } else {\n      this._error(new Error('bad content-type header, no multipart boundary'));\n    }\n\n    return;\n  }\n\n  if (this.headers['content-type'].match(/json/i)) {\n    this._initJSONencoded();\n\n    return;\n  }\n\n  this._error(new Error('bad content-type header, unknown content-type: ' + this.headers['content-type']));\n};\n\nIncomingForm.prototype._error = function (err) {\n  if (this.error || this.ended) {\n    return;\n  }\n\n  this.error = err;\n  this.emit('error', err);\n\n  if (Array.isArray(this.openedFiles)) {\n    this.openedFiles.forEach(function (file) {\n      file._writeStream.on('error', function () {}).destroy();\n\n      setTimeout(fs.unlink, 0, file.path, function (error) {});\n    });\n  }\n};\n\nIncomingForm.prototype._parseContentLength = function () {\n  this.bytesReceived = 0;\n\n  if (this.headers['content-length']) {\n    this.bytesExpected = parseInt(this.headers['content-length'], 10);\n  } else if (this.headers['transfer-encoding'] === undefined) {\n    this.bytesExpected = 0;\n  }\n\n  if (this.bytesExpected !== null) {\n    this.emit('progress', this.bytesReceived, this.bytesExpected);\n  }\n};\n\nIncomingForm.prototype._newParser = function () {\n  return new MultipartParser();\n};\n\nIncomingForm.prototype._initMultipart = function (boundary) {\n  this.type = 'multipart';\n  var parser = new MultipartParser(),\n      self = this,\n      headerField,\n      headerValue,\n      part;\n  parser.initWithBoundary(boundary);\n\n  parser.onPartBegin = function () {\n    part = new Stream();\n    part.readable = true;\n    part.headers = {};\n    part.name = null;\n    part.filename = null;\n    part.mime = null;\n    part.transferEncoding = 'binary';\n    part.transferBuffer = '';\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeaderField = function (b, start, end) {\n    headerField += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderValue = function (b, start, end) {\n    headerValue += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderEnd = function () {\n    headerField = headerField.toLowerCase();\n    part.headers[headerField] = headerValue; // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\n    var m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))/i);\n\n    if (headerField == 'content-disposition') {\n      if (m) {\n        part.name = m[2] || m[3] || '';\n      }\n\n      part.filename = self._fileName(headerValue);\n    } else if (headerField == 'content-type') {\n      part.mime = headerValue;\n    } else if (headerField == 'content-transfer-encoding') {\n      part.transferEncoding = headerValue.toLowerCase();\n    }\n\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeadersEnd = function () {\n    switch (part.transferEncoding) {\n      case 'binary':\n      case '7bit':\n      case '8bit':\n        parser.onPartData = function (b, start, end) {\n          part.emit('data', b.slice(start, end));\n        };\n\n        parser.onPartEnd = function () {\n          part.emit('end');\n        };\n\n        break;\n\n      case 'base64':\n        parser.onPartData = function (b, start, end) {\n          part.transferBuffer += b.slice(start, end).toString('ascii');\n          /*\n          four bytes (chars) in base64 converts to three bytes in binary\n          encoding. So we should always work with a number of bytes that\n          can be divided by 4, it will result in a number of buytes that\n          can be divided vy 3.\n          */\n\n          var offset = parseInt(part.transferBuffer.length / 4, 10) * 4;\n          part.emit('data', new Buffer(part.transferBuffer.substring(0, offset), 'base64'));\n          part.transferBuffer = part.transferBuffer.substring(offset);\n        };\n\n        parser.onPartEnd = function () {\n          part.emit('data', new Buffer(part.transferBuffer, 'base64'));\n          part.emit('end');\n        };\n\n        break;\n\n      default:\n        return self._error(new Error('unknown transfer-encoding'));\n    }\n\n    self.onPart(part);\n  };\n\n  parser.onEnd = function () {\n    self.ended = true;\n\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._fileName = function (headerValue) {\n  // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n  var m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))($|;\\s)/i);\n  if (!m) return;\n  var match = m[2] || m[3] || '';\n  var filename = match.substr(match.lastIndexOf('\\\\') + 1);\n  filename = filename.replace(/%22/g, '\"');\n  filename = filename.replace(/&#([\\d]{4});/g, function (m, code) {\n    return String.fromCharCode(code);\n  });\n  return filename;\n};\n\nIncomingForm.prototype._initUrlencoded = function () {\n  this.type = 'urlencoded';\n  var parser = new QuerystringParser(this.maxFields),\n      self = this;\n\n  parser.onField = function (key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function () {\n    self.ended = true;\n\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._initOctetStream = function () {\n  this.type = 'octet-stream';\n  var filename = this.headers['x-file-name'];\n  var mime = this.headers['content-type'];\n  var file = new File({\n    path: this._uploadPath(filename),\n    name: filename,\n    type: mime\n  });\n  this.emit('fileBegin', filename, file);\n  file.open();\n  this.openedFiles.push(file);\n  this._flushing++;\n  var self = this;\n  self._parser = new OctetParser(); //Keep track of writes that haven't finished so we don't emit the file before it's done being written\n\n  var outstandingWrites = 0;\n\n  self._parser.on('data', function (buffer) {\n    self.pause();\n    outstandingWrites++;\n    file.write(buffer, function () {\n      outstandingWrites--;\n      self.resume();\n\n      if (self.ended) {\n        self._parser.emit('doneWritingFile');\n      }\n    });\n  });\n\n  self._parser.on('end', function () {\n    self._flushing--;\n    self.ended = true;\n\n    var done = function () {\n      file.end(function () {\n        self.emit('file', 'file', file);\n\n        self._maybeEnd();\n      });\n    };\n\n    if (outstandingWrites === 0) {\n      done();\n    } else {\n      self._parser.once('doneWritingFile', done);\n    }\n  });\n};\n\nIncomingForm.prototype._initJSONencoded = function () {\n  this.type = 'json';\n  var parser = new JSONParser(this),\n      self = this;\n\n  parser.onField = function (key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function () {\n    self.ended = true;\n\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._uploadPath = function (filename) {\n  var buf = crypto.randomBytes(16);\n  var name = 'upload_' + buf.toString('hex');\n\n  if (this.keepExtensions) {\n    var ext = path.extname(filename);\n    ext = ext.replace(/(\\.[a-z0-9]+).*/i, '$1');\n    name += ext;\n  }\n\n  return path.join(this.uploadDir, name);\n};\n\nIncomingForm.prototype._maybeEnd = function () {\n  if (!this.ended || this._flushing || this.error) {\n    return;\n  }\n\n  this.emit('end');\n};","map":{"version":3,"names":["global","GENTLY","require","hijack","crypto","fs","util","path","File","MultipartParser","QuerystringParser","OctetParser","JSONParser","StringDecoder","EventEmitter","Stream","os","IncomingForm","opts","call","error","ended","maxFields","maxFieldsSize","maxFileSize","keepExtensions","uploadDir","tmpdir","tmpDir","encoding","headers","type","hash","multiples","bytesReceived","bytesExpected","_parser","_flushing","_fieldsSize","_fileSize","openedFiles","inherits","exports","prototype","parse","req","cb","pause","err","_error","resume","fields","files","on","name","value","file","Array","isArray","push","writeHeaders","self","emit","Error","buffer","write","end","_parseContentLength","_parseContentType","length","bytesParsed","onPart","part","handlePart","filename","undefined","decoder","_uploadPath","mime","open","_maybeEnd","dummyParser","match","_initOctetStream","_initUrlencoded","m","_initMultipart","_initJSONencoded","forEach","_writeStream","destroy","setTimeout","unlink","parseInt","_newParser","boundary","parser","headerField","headerValue","initWithBoundary","onPartBegin","readable","transferEncoding","transferBuffer","onHeaderField","b","start","toString","onHeaderValue","onHeaderEnd","toLowerCase","_fileName","onHeadersEnd","onPartData","slice","onPartEnd","offset","Buffer","substring","onEnd","substr","lastIndexOf","replace","code","String","fromCharCode","onField","key","val","outstandingWrites","done","once","buf","randomBytes","ext","extname","join"],"sources":["/home/bijen/Desktop/LaravelReact/react-frontend/node_modules/formidable/lib/incoming_form.js"],"sourcesContent":["if (global.GENTLY) require = GENTLY.hijack(require);\n\nvar crypto = require('crypto');\nvar fs = require('fs');\nvar util = require('util'),\n    path = require('path'),\n    File = require('./file'),\n    MultipartParser = require('./multipart_parser').MultipartParser,\n    QuerystringParser = require('./querystring_parser').QuerystringParser,\n    OctetParser       = require('./octet_parser').OctetParser,\n    JSONParser = require('./json_parser').JSONParser,\n    StringDecoder = require('string_decoder').StringDecoder,\n    EventEmitter = require('events').EventEmitter,\n    Stream = require('stream').Stream,\n    os = require('os');\n\nfunction IncomingForm(opts) {\n  if (!(this instanceof IncomingForm)) return new IncomingForm(opts);\n  EventEmitter.call(this);\n\n  opts=opts||{};\n\n  this.error = null;\n  this.ended = false;\n\n  this.maxFields = opts.maxFields || 1000;\n  this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024;\n  this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024;\n  this.keepExtensions = opts.keepExtensions || false;\n  this.uploadDir = opts.uploadDir || (os.tmpdir && os.tmpdir()) || os.tmpDir();\n  this.encoding = opts.encoding || 'utf-8';\n  this.headers = null;\n  this.type = null;\n  this.hash = opts.hash || false;\n  this.multiples = opts.multiples || false;\n\n  this.bytesReceived = null;\n  this.bytesExpected = null;\n\n  this._parser = null;\n  this._flushing = 0;\n  this._fieldsSize = 0;\n  this._fileSize = 0;\n  this.openedFiles = [];\n\n  return this;\n}\nutil.inherits(IncomingForm, EventEmitter);\nexports.IncomingForm = IncomingForm;\n\nIncomingForm.prototype.parse = function(req, cb) {\n  this.pause = function() {\n    try {\n      req.pause();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n      return false;\n    }\n    return true;\n  };\n\n  this.resume = function() {\n    try {\n      req.resume();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // Setup callback first, so we don't miss anything from data events emitted\n  // immediately.\n  if (cb) {\n    var fields = {}, files = {};\n    this\n      .on('field', function(name, value) {\n        fields[name] = value;\n      })\n      .on('file', function(name, file) {\n        if (this.multiples) {\n          if (files[name]) {\n            if (!Array.isArray(files[name])) {\n              files[name] = [files[name]];\n            }\n            files[name].push(file);\n          } else {\n            files[name] = file;\n          }\n        } else {\n          files[name] = file;\n        }\n      })\n      .on('error', function(err) {\n        cb(err, fields, files);\n      })\n      .on('end', function() {\n        cb(null, fields, files);\n      });\n  }\n\n  // Parse headers and setup the parser, ready to start listening for data.\n  this.writeHeaders(req.headers);\n\n  // Start listening for data.\n  var self = this;\n  req\n    .on('error', function(err) {\n      self._error(err);\n    })\n    .on('aborted', function() {\n      self.emit('aborted');\n      self._error(new Error('Request aborted'));\n    })\n    .on('data', function(buffer) {\n      self.write(buffer);\n    })\n    .on('end', function() {\n      if (self.error) {\n        return;\n      }\n\n      var err = self._parser.end();\n      if (err) {\n        self._error(err);\n      }\n    });\n\n  return this;\n};\n\nIncomingForm.prototype.writeHeaders = function(headers) {\n  this.headers = headers;\n  this._parseContentLength();\n  this._parseContentType();\n};\n\nIncomingForm.prototype.write = function(buffer) {\n  if (this.error) {\n    return;\n  }\n  if (!this._parser) {\n    this._error(new Error('uninitialized parser'));\n    return;\n  }\n  if (typeof this._parser.write !== 'function') {\n    this._error(new Error('did not expect data'));\n    return;\n  }\n\n  this.bytesReceived += buffer.length;\n  this.emit('progress', this.bytesReceived, this.bytesExpected);\n\n  var bytesParsed = this._parser.write(buffer);\n  if (bytesParsed !== buffer.length) {\n    this._error(new Error('parser error, '+bytesParsed+' of '+buffer.length+' bytes parsed'));\n  }\n\n  return bytesParsed;\n};\n\nIncomingForm.prototype.pause = function() {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.resume = function() {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.onPart = function(part) {\n  // this method can be overwritten by the user\n  this.handlePart(part);\n};\n\nIncomingForm.prototype.handlePart = function(part) {\n  var self = this;\n\n  // This MUST check exactly for undefined. You can not change it to !part.filename.\n  if (part.filename === undefined) {\n    var value = ''\n      , decoder = new StringDecoder(this.encoding);\n\n    part.on('data', function(buffer) {\n      self._fieldsSize += buffer.length;\n      if (self._fieldsSize > self.maxFieldsSize) {\n        self._error(new Error('maxFieldsSize exceeded, received '+self._fieldsSize+' bytes of field data'));\n        return;\n      }\n      value += decoder.write(buffer);\n    });\n\n    part.on('end', function() {\n      self.emit('field', part.name, value);\n    });\n    return;\n  }\n\n  this._flushing++;\n\n  var file = new File({\n    path: this._uploadPath(part.filename),\n    name: part.filename,\n    type: part.mime,\n    hash: self.hash\n  });\n\n  this.emit('fileBegin', part.name, file);\n\n  file.open();\n  this.openedFiles.push(file);\n\n  part.on('data', function(buffer) {\n    self._fileSize += buffer.length;\n    if (self._fileSize > self.maxFileSize) {\n      self._error(new Error('maxFileSize exceeded, received '+self._fileSize+' bytes of file data'));\n      return;\n    }\n    if (buffer.length == 0) {\n      return;\n    }\n    self.pause();\n    file.write(buffer, function() {\n      self.resume();\n    });\n  });\n\n  part.on('end', function() {\n    file.end(function() {\n      self._flushing--;\n      self.emit('file', part.name, file);\n      self._maybeEnd();\n    });\n  });\n};\n\nfunction dummyParser(self) {\n  return {\n    end: function () {\n      self.ended = true;\n      self._maybeEnd();\n      return null;\n    }\n  };\n}\n\nIncomingForm.prototype._parseContentType = function() {\n  if (this.bytesExpected === 0) {\n    this._parser = dummyParser(this);\n    return;\n  }\n\n  if (!this.headers['content-type']) {\n    this._error(new Error('bad content-type header, no content-type'));\n    return;\n  }\n\n  if (this.headers['content-type'].match(/octet-stream/i)) {\n    this._initOctetStream();\n    return;\n  }\n\n  if (this.headers['content-type'].match(/urlencoded/i)) {\n    this._initUrlencoded();\n    return;\n  }\n\n  if (this.headers['content-type'].match(/multipart/i)) {\n    var m = this.headers['content-type'].match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n    if (m) {\n      this._initMultipart(m[1] || m[2]);\n    } else {\n      this._error(new Error('bad content-type header, no multipart boundary'));\n    }\n    return;\n  }\n\n  if (this.headers['content-type'].match(/json/i)) {\n    this._initJSONencoded();\n    return;\n  }\n\n  this._error(new Error('bad content-type header, unknown content-type: '+this.headers['content-type']));\n};\n\nIncomingForm.prototype._error = function(err) {\n  if (this.error || this.ended) {\n    return;\n  }\n\n  this.error = err;\n  this.emit('error', err);\n\n  if (Array.isArray(this.openedFiles)) {\n    this.openedFiles.forEach(function(file) {\n      file._writeStream\n        .on('error', function() {})\n        .destroy();\n      setTimeout(fs.unlink, 0, file.path, function(error) { });\n    });\n  }\n};\n\nIncomingForm.prototype._parseContentLength = function() {\n  this.bytesReceived = 0;\n  if (this.headers['content-length']) {\n    this.bytesExpected = parseInt(this.headers['content-length'], 10);\n  } else if (this.headers['transfer-encoding'] === undefined) {\n    this.bytesExpected = 0;\n  }\n\n  if (this.bytesExpected !== null) {\n    this.emit('progress', this.bytesReceived, this.bytesExpected);\n  }\n};\n\nIncomingForm.prototype._newParser = function() {\n  return new MultipartParser();\n};\n\nIncomingForm.prototype._initMultipart = function(boundary) {\n  this.type = 'multipart';\n\n  var parser = new MultipartParser(),\n      self = this,\n      headerField,\n      headerValue,\n      part;\n\n  parser.initWithBoundary(boundary);\n\n  parser.onPartBegin = function() {\n    part = new Stream();\n    part.readable = true;\n    part.headers = {};\n    part.name = null;\n    part.filename = null;\n    part.mime = null;\n\n    part.transferEncoding = 'binary';\n    part.transferBuffer = '';\n\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeaderField = function(b, start, end) {\n    headerField += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderValue = function(b, start, end) {\n    headerValue += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderEnd = function() {\n    headerField = headerField.toLowerCase();\n    part.headers[headerField] = headerValue;\n\n    // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n    var m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))/i);\n    if (headerField == 'content-disposition') {\n      if (m) {\n        part.name = m[2] || m[3] || '';\n      }\n\n      part.filename = self._fileName(headerValue);\n    } else if (headerField == 'content-type') {\n      part.mime = headerValue;\n    } else if (headerField == 'content-transfer-encoding') {\n      part.transferEncoding = headerValue.toLowerCase();\n    }\n\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeadersEnd = function() {\n    switch(part.transferEncoding){\n      case 'binary':\n      case '7bit':\n      case '8bit':\n      parser.onPartData = function(b, start, end) {\n        part.emit('data', b.slice(start, end));\n      };\n\n      parser.onPartEnd = function() {\n        part.emit('end');\n      };\n      break;\n\n      case 'base64':\n      parser.onPartData = function(b, start, end) {\n        part.transferBuffer += b.slice(start, end).toString('ascii');\n\n        /*\n        four bytes (chars) in base64 converts to three bytes in binary\n        encoding. So we should always work with a number of bytes that\n        can be divided by 4, it will result in a number of buytes that\n        can be divided vy 3.\n        */\n        var offset = parseInt(part.transferBuffer.length / 4, 10) * 4;\n        part.emit('data', new Buffer(part.transferBuffer.substring(0, offset), 'base64'));\n        part.transferBuffer = part.transferBuffer.substring(offset);\n      };\n\n      parser.onPartEnd = function() {\n        part.emit('data', new Buffer(part.transferBuffer, 'base64'));\n        part.emit('end');\n      };\n      break;\n\n      default:\n      return self._error(new Error('unknown transfer-encoding'));\n    }\n\n    self.onPart(part);\n  };\n\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._fileName = function(headerValue) {\n  // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n  var m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))($|;\\s)/i);\n  if (!m) return;\n\n  var match = m[2] || m[3] || '';\n  var filename = match.substr(match.lastIndexOf('\\\\') + 1);\n  filename = filename.replace(/%22/g, '\"');\n  filename = filename.replace(/&#([\\d]{4});/g, function(m, code) {\n    return String.fromCharCode(code);\n  });\n  return filename;\n};\n\nIncomingForm.prototype._initUrlencoded = function() {\n  this.type = 'urlencoded';\n\n  var parser = new QuerystringParser(this.maxFields)\n    , self = this;\n\n  parser.onField = function(key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._initOctetStream = function() {\n  this.type = 'octet-stream';\n  var filename = this.headers['x-file-name'];\n  var mime = this.headers['content-type'];\n\n  var file = new File({\n    path: this._uploadPath(filename),\n    name: filename,\n    type: mime\n  });\n\n  this.emit('fileBegin', filename, file);\n  file.open();\n  this.openedFiles.push(file);\n  this._flushing++;\n\n  var self = this;\n\n  self._parser = new OctetParser();\n\n  //Keep track of writes that haven't finished so we don't emit the file before it's done being written\n  var outstandingWrites = 0;\n\n  self._parser.on('data', function(buffer){\n    self.pause();\n    outstandingWrites++;\n\n    file.write(buffer, function() {\n      outstandingWrites--;\n      self.resume();\n\n      if(self.ended){\n        self._parser.emit('doneWritingFile');\n      }\n    });\n  });\n\n  self._parser.on('end', function(){\n    self._flushing--;\n    self.ended = true;\n\n    var done = function(){\n      file.end(function() {\n        self.emit('file', 'file', file);\n        self._maybeEnd();\n      });\n    };\n\n    if(outstandingWrites === 0){\n      done();\n    } else {\n      self._parser.once('doneWritingFile', done);\n    }\n  });\n};\n\nIncomingForm.prototype._initJSONencoded = function() {\n  this.type = 'json';\n\n  var parser = new JSONParser(this)\n    , self = this;\n\n  parser.onField = function(key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._uploadPath = function(filename) {\n  var buf = crypto.randomBytes(16);\n  var name = 'upload_' + buf.toString('hex');\n\n  if (this.keepExtensions) {\n    var ext = path.extname(filename);\n    ext     = ext.replace(/(\\.[a-z0-9]+).*/i, '$1');\n\n    name += ext;\n  }\n\n  return path.join(this.uploadDir, name);\n};\n\nIncomingForm.prototype._maybeEnd = function() {\n  if (!this.ended || this._flushing || this.error) {\n    return;\n  }\n\n  this.emit('end');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}