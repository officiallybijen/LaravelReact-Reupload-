{"ast":null,"code":"#!/usr/bin/env node\n// Generated by CoffeeScript 2.0.1\n(function () {\n  var IncomingForm, createTransport, http, polaris, smtp, util;\n  ({\n    IncomingForm\n  } = require('formidable'));\n  ({\n    createTransport\n  } = require('nodemailer'));\n  http = require('http');\n  util = require('util');\n  polaris = module.exports;\n  polaris.config = {\n    listen: {\n      host: 'localhost',\n      port: 8080\n    },\n    transport: {\n      name: 'Direct'\n    },\n    recipients: {}\n  };\n  smtp = null; // Load config from a JSON file\n\n  polaris.loadConfig = function (filename) {\n    console.log(`Loading config from ${filename}...`);\n    return polaris.config = require(filename);\n  }; // HTTP / Connect / Express request handler\n\n\n  polaris.handler = function (req, res) {\n    var form, transportConfig;\n    form = new IncomingForm();\n\n    if (!smtp) {\n      transportConfig = polaris.config.transport;\n      smtp = createTransport(transportConfig.options);\n    }\n\n    return form.parse(req, function (err, fields, files) {\n      var field, file, i, len, name, options, recipient, ref; // Get the recipient config\n\n      recipient = polaris.config.recipients[fields.recipient];\n\n      if (!recipient || !fields.from || !fields.message) {\n        res.writeHead(400, {\n          'content-type': 'text/plain'\n        });\n        return res.end(\"Bad recipient or missing required parameters:\\n\" + util.inspect(fields));\n      }\n\n      if (fields.name) {\n        fields.from = `${fields.name} <${fields.from}>`;\n      }\n\n      ref = ['phone', 'location'];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        field = ref[i];\n\n        if (fields[field]) {\n          fields.message = `${field}: ${fields[field]}\\n\\n${fields.message}`;\n        }\n      } // Send the mail\n\n\n      console.log(`${fields.from} -> ${recipient.to}`);\n      console.log(`Message: ${fields.message}`);\n      options = {\n        from: fields.from,\n        replyTo: fields.from,\n        to: recipient.to,\n        subject: fields.title || recipient.title || 'Email form',\n        text: fields.message\n      }; // Only attach files if allowed\n\n      if (files && recipient.allowFiles) {\n        options.attachments = [];\n\n        for (name in files) {\n          file = files[name];\n          options.attachments.push({\n            fileName: file.name,\n            filePath: file.path\n          });\n        }\n      } // Send mail to recipients\n\n\n      return smtp.sendMail(options, function (err, response) {\n        if (err) {\n          res.writeHead(500, {\n            'content-type': 'text/plain'\n          });\n          return res.end(err.toString());\n        }\n\n        res.writeHead(302, {\n          location: recipient.redirect\n        });\n        return res.end();\n      });\n    });\n  }; // Create an HTTP server and listen for POST requests\n\n\n  polaris.runServer = function (done) {\n    var app, listenConfig;\n    app = http.createServer(function (req, res) {\n      // Enable CORS\n      res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n      res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With\"); // Handle requests\n\n      if (req.url === '/' && req.method.toLowerCase() === 'post') {\n        return polaris.handler(req, res);\n      }\n    });\n    listenConfig = polaris.config.listen;\n    return app.listen(listenConfig.port, listenConfig.host, function () {\n      console.log(`Listening on ${polaris.config.listen.host}:` + `${polaris.config.listen.port}`);\n      return typeof done === \"function\" ? done(null, app) : void 0;\n    });\n  };\n\n  if (require.main === module) {\n    if (process.argv.length > 2) {\n      polaris.loadConfig(require('path').resolve(process.argv[2]));\n    }\n\n    polaris.runServer();\n  }\n}).call(this);","map":{"version":3,"names":["IncomingForm","createTransport","http","polaris","smtp","util","require","module","exports","config","listen","host","port","transport","name","recipients","loadConfig","filename","console","log","handler","req","res","form","transportConfig","options","parse","err","fields","files","field","file","i","len","recipient","ref","from","message","writeHead","end","inspect","length","to","replyTo","subject","title","text","allowFiles","attachments","push","fileName","filePath","path","sendMail","response","toString","location","redirect","runServer","done","app","listenConfig","createServer","setHeader","url","method","toLowerCase","main","process","argv","resolve","call"],"sources":["/home/bijen/Desktop/LaravelReact/react-frontend/node_modules/polaris/main.js"],"sourcesContent":["#!/usr/bin/env node\n\n// Generated by CoffeeScript 2.0.1\n(function() {\n  var IncomingForm, createTransport, http, polaris, smtp, util;\n\n  ({IncomingForm} = require('formidable'));\n\n  ({createTransport} = require('nodemailer'));\n\n  http = require('http');\n\n  util = require('util');\n\n  polaris = module.exports;\n\n  polaris.config = {\n    listen: {\n      host: 'localhost',\n      port: 8080\n    },\n    transport: {\n      name: 'Direct'\n    },\n    recipients: {}\n  };\n\n  smtp = null;\n\n  // Load config from a JSON file\n  polaris.loadConfig = function(filename) {\n    console.log(`Loading config from ${filename}...`);\n    return polaris.config = require(filename);\n  };\n\n  // HTTP / Connect / Express request handler\n  polaris.handler = function(req, res) {\n    var form, transportConfig;\n    form = new IncomingForm();\n    if (!smtp) {\n      transportConfig = polaris.config.transport;\n      smtp = createTransport(transportConfig.options);\n    }\n    return form.parse(req, function(err, fields, files) {\n      var field, file, i, len, name, options, recipient, ref;\n      // Get the recipient config\n      recipient = polaris.config.recipients[fields.recipient];\n      if (!recipient || !fields.from || !fields.message) {\n        res.writeHead(400, {\n          'content-type': 'text/plain'\n        });\n        return res.end(\"Bad recipient or missing required parameters:\\n\" + util.inspect(fields));\n      }\n      if (fields.name) {\n        fields.from = `${fields.name} <${fields.from}>`;\n      }\n      ref = ['phone', 'location'];\n      for (i = 0, len = ref.length; i < len; i++) {\n        field = ref[i];\n        if (fields[field]) {\n          fields.message = `${field}: ${fields[field]}\\n\\n${fields.message}`;\n        }\n      }\n      // Send the mail\n      console.log(`${fields.from} -> ${recipient.to}`);\n      console.log(`Message: ${fields.message}`);\n      options = {\n        from: fields.from,\n        replyTo: fields.from,\n        to: recipient.to,\n        subject: fields.title || recipient.title || 'Email form',\n        text: fields.message\n      };\n      // Only attach files if allowed\n      if (files && recipient.allowFiles) {\n        options.attachments = [];\n        for (name in files) {\n          file = files[name];\n          options.attachments.push({\n            fileName: file.name,\n            filePath: file.path\n          });\n        }\n      }\n      // Send mail to recipients\n      return smtp.sendMail(options, function(err, response) {\n        if (err) {\n          res.writeHead(500, {\n            'content-type': 'text/plain'\n          });\n          return res.end(err.toString());\n        }\n        res.writeHead(302, {\n          location: recipient.redirect\n        });\n        return res.end();\n      });\n    });\n  };\n\n  // Create an HTTP server and listen for POST requests\n  polaris.runServer = function(done) {\n    var app, listenConfig;\n    app = http.createServer(function(req, res) {\n      // Enable CORS\n      res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n      res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n      // Handle requests\n      if (req.url === '/' && req.method.toLowerCase() === 'post') {\n        return polaris.handler(req, res);\n      }\n    });\n    listenConfig = polaris.config.listen;\n    return app.listen(listenConfig.port, listenConfig.host, function() {\n      console.log(`Listening on ${polaris.config.listen.host}:` + `${polaris.config.listen.port}`);\n      return typeof done === \"function\" ? done(null, app) : void 0;\n    });\n  };\n\n  if (require.main === module) {\n    if (process.argv.length > 2) {\n      polaris.loadConfig(require('path').resolve(process.argv[2]));\n    }\n    polaris.runServer();\n  }\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}