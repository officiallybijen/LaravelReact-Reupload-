{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor, SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Button } from '../Button/Button.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\n\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    ...restProps\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(isBreakpointsXS());\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleIsSmallScreen = useCallback(() => {\n    setSmallScreen(smallScreen);\n  }, [smallScreen]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur; // hide the scrollbar when resizing\n\n\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleIsSmallScreen();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleIsSmallScreen, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: smallScreen,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton\n      }, iconMarkup, headingContent);\n\n      if (!sortToggleLabels) {\n        return sortMarkup;\n      }\n\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent\n      }, sortMarkup);\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isBreakpointsXS = () => {\n  var _toPx;\n\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\n\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n\n  return '';\n}\n\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\n\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","useEffect","EnableSelectionMinor","SortAscendingMajor","SortDescendingMajor","CSSTransition","toPx","tokens","motion","debounce","useToggle","classNames","styles","IndexProvider","Cell","Row","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","useIndexValue","useIndexSelectionChange","useI18n","Stack","Checkbox","Spinner","AfterInitialMount","EventListener","Badge","VisuallyHidden","UnstyledButton","Tooltip","Sticky","Button","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","restProps","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","tableInitialized","setTableInitialized","isSmallScreenSelectable","setIsSmallScreenSelectable","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","smallScreen","setSmallScreen","isBreakpointsXS","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","tableBodyRef","node","toggleIsSmallScreenSelectable","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","current","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","_tableHeadingRects$cu","_tableHeadingRects$cu2","resizeTableScrollBar","_scrollContainerEleme","_tableElement$current","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","handleIsSmallScreen","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","_scrollBarElement$cur","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","hasBulkActions","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","createElement","className","TableHeading","key","getHeadingKey","spacing","wrap","alignment","FirstStickyHeaderElement","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","parseInt","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","size","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionClassNames","BulkActionsWrapper","shouldShowActions","promotedActions","actions","bulkActionsMarkup","label","accessibilityLabel","selected","onToggleAll","onSelectModeToggle","handleSelectModeToggle","stickyColumnHeaderClassNames","StickyTableColumnHeader","selectButtonMarkup","icon","onClick","headerMarkup","HeaderWrapper","unselectable","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","emptyStateMarkup","title","description","withIllustration","sharedMarkup","Fragment","event","handler","bodyMarkup","CondensedList","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","IndexTable","isSecond","isLast","hasSortable","headingContentClassName","hidden","flush","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","new","status","isCurrentlySorted","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","sortMarkup","TableHeadingSortButton","tooltipDirection","tooltipContent","content","position","headingStyle","stickyHeadingClassName","customActionText","itemsLength","actionText","onAction","val","_toPx","window","innerWidth","parseFloat","breakpoints","id","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["/home/bijen/Desktop/LaravelReact/react-frontend/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor, SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Button } from '../Button/Button.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\n\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  ...restProps\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(isBreakpointsXS());\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleIsSmallScreen = useCallback(() => {\n    setSmallScreen(smallScreen);\n  }, [smallScreen]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleIsSmallScreen();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleIsSmallScreen, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: smallScreen,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton\n      }, iconMarkup, headingContent);\n\n      if (!sortToggleLabels) {\n        return sortMarkup;\n      }\n\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent\n      }, sortMarkup);\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isBreakpointsXS = () => {\n  var _toPx;\n\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\n\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n\n  return '';\n}\n\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}